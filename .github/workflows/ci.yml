name: CI

on: [push, pull_request]

jobs:
  ci:
    strategy:
      # Allows for matrix sub-jobs to fail without canceling the rest
      fail-fast: false

      # MATRIX:
      # =======
      # Required parameters:
      #  os                  the os to run on
      #  python-version      the python version to use
      #  backend             the backend to use
      #  env                 any additional env variables. Set to '{}' for none
      # Optional parameters:
      #  allowed_failure     whether the job is allowed to fail
      #  extra_hash          extra hash str to differentiate from other caches with similar name (must always start with '-')
      matrix:
        # Tests [amd64]
        #
        os: [ubuntu-18.04]
        python-version: [2.7, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 3.10-dev]
        env: [{ STATIC_DEPS: true }, { STATIC_DEPS: false }]

        include:
          # Temporary - Allow failure on all 3.10-dev jobs until beta comes out
          - python-version: 3.10-dev
            allowed_failure: true
          # Temporary - Allow failure on all 3.10-dev jobs until beta comes out
          - python-version: 3.10-dev
            env: { COVERAGE: true }
          # Ubuntu sub-jobs:
          # ================
          # Pypy
          - os: ubuntu-18.04
            python-version: pypy-2.7
            allowed_failure: true
          - os: ubuntu-18.04
            python-version: pypy-3.7
            allowed_failure: true

          # MacOS sub-jobs
          # ==============
          - os: macos-10.15
            python-version: 2.7
            env: { MACOSX_DEPLOYMENT_TARGET: 10.14 }
          - os: macos-10.15
            python-version: 3.8
            env: { MACOSX_DEPLOYMENT_TARGET: 10.14 }

    # This defaults to 360 minutes (6h) which is way too long and if a test gets stuck, it can block other pipelines.
    # From testing, the runs tend to take ~20 minutes, so a limit of 30 minutes should be enough. This can always be
    # changed in the future if needed.
    timeout-minutes: 30
    runs-on: ${{ matrix.os }}

    env:
      OS_NAME: ${{ matrix.os }}
      PYTHON_VERSION: ${{ matrix.python-version }}
      USE_CCACHE: 1
      CCACHE_SLOPPINESS: "pch_defines,time_macros"
      CCACHE_COMPRESS: 1
      CCACHE_MAXSIZE: "100M"

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache [ccache]
        uses: pat-s/always-upload-cache@v2.1.3
        if: startsWith(runner.os, 'Linux')
        with:
          path: ~/.ccache
          key: ${{ runner.os }}-ccache${{ matrix.extra_hash }}-${{ matrix.python-version }}-${{ hashFiles('**/requirements*.txt', '.github/**/ci.yml', '**/ci-run.sh') }}

      - name: Run CI
        continue-on-error: ${{ matrix.allowed_failure || false }}
        env: ${{ matrix.env }}
        run: bash ./Tools/ci-run.sh

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v2
        with:
          name: pycoverage_html
          path: coverage-report-html
          if-no-files-found: ignore
